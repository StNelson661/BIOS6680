*************	P	R	O	G	R	A	M		H	E	A	D	E	R	*****************
*****************************************************************************************
*									                                            													*
*	PROGRAM:	Prg 2 - Create Tabulations Data - Hypertension Study.sas                    *
*	PURPOSE:	Create Tabulations data sets from the source data                           *
*	AUTHOR:		Stephen Nelson		                                  												*
*	CREATED:	2017-09-25						                                  										*
*	                                                                                      *
*	COURSE:		BIOS 6680 - Data Management Using SAS                                       *
*	DATA USED:	Source.Scans                                                              *
*	SOFTWARE:	SAS (r) Proprietary Software 9.4 (TS1M4)							                     	*
*	                                                                                      *
*****************************************************************************************
***********************************************************************************; RUN;

%LET CourseRoot = /folders/myfolders/BIOS 6680- SAS;;
LIBNAME HypImpt "&CourseRoot/Hypertension Study/Data/2_Import";
LIBNAME Hyptabs "&CourseRoot/Hypertension Study/Data/3_Tabulations";


*	Setting System Options   *;
OPTIONS	FMTSEARCH = (HypTabs.HypFormats WORK LIBRARY)
		NOFMTERR;



*	DATA SET:  States   *;
DATA	HypTabs.States	(LABEL = 'Study States');
	SET	HypImpt.States;
	LABEL	StateNum	= 'State Number'
			StateCd		= 'State Code'
			StateNm		= 'State Name';
	RUN;

PROC SORT DATA = HypTabs.States;
	BY	StateNum;
	RUN;



*	DATA SET:  Contact   *;

*	Creating data for Iowa   *;
DATA	WORK.Contact_IA;
	KEEP	SSN Inits
			City StateCd ZipCd;
	RETAIN	SSN Inits
			City StateCd ZipCd;

	SET	HypImpt.IowaResidents	(	KEEP	= SSN Initials City ZipCd
									RENAME	= (	ZipCd		= ZipCdSrc	)
								);

	LENGTH	Inits	$ 3;
	Inits	=	CATS(SUBSTR(Initials, 3, 2), SUBSTR(Initials, 1, 1));

	City	=	PROPCASE(City);

	RETAIN	StateCd 'IA';

	ZipCd	=	PUT(ZipCdSrc, Z5.);

	RUN;

*	Creating data for Mississippi   *;
DATA	WORK.Contact_MS;
	KEEP	SSN Inits
			City StateCd ZipCd;
	RETAIN	SSN Inits City;
	RETAIN	StateCd 'MS' ZipCd;

	SET	HypImpt.MS_Citizens	(	KEEP	= SocSecNum FirstInit MiddleInit LastInit CityState ZipCd
								RENAME	= (	SocSecNum		= SSN	)
								);

	LENGTH	Inits	$ 3
			City	$ 20
			StateCd	$ 2	;
	Inits	=	COMPRESS(CATS(FirstInit, MiddleInit, LastInit), '.');

	City	=	SCAN(CityState, 1, ',');

	RUN;

*	Creating data for Utah   *;
DATA	WORK.Contact_UT;
	KEEP	SSN Inits
			City StateCd ZipCd;
	RETAIN	SSN Inits
			City StateCd ZipCd;

	SET	HypImpt.UT_Records	(	KEEP	= ID Inits CitySt ZipCode
								RENAME	= (	Inits		= InitsSrc
											ZipCode		= ZipCd	)
							);

	LENGTH	SSN		$ 11
			Inits	$ 3
			City	$ 20
			StateCd	$ 2	;

	SSN	=	CATX('-', SUBSTR(PUT(ID, Z9.), 1, 3), SUBSTR(PUT(ID, Z9.), 4, 2), SUBSTR(PUT(ID, Z9.), 6, 4));

	Inits	= TRANWRD(COMPRESS(InitsSrc, '.'), '  ', '-');
/*	IF	SUBSTR(InitsSrc, 3, 1) = ' '	THEN*/
/*				Inits	=	CATS(SUBSTR(InitsSrc, 1, 1), '-', SUBSTR(InitsSrc, 5, 1));*/
/*		ELSE	Inits	=	COMPRESS(InitsSrc, '.');*/

	City	=	SCAN(CitySt, 1, ',');
	StateCd	=	SCAN(CitySt, -1, ', ');

	RUN;

*	Creating Combined Data Set   *;
DATA	HypTabs.Contact	(	LABEL = 'Contact Information'	);

	SET	WORK.Contact_IA
		WORK.Contact_MS
		WORK.Contact_UT;

	LABEL	SSN		= 'Social Security Number'
			Inits	= 'Subject Initials'
			City	= 'City'
			StateCd	= 'State Code'
			ZipCd	= 'Zip Code'	;

	FORMAT	StateCd $StateCd.;

	RUN;

PROC SORT DATA = HypTabs.Contact;
	BY	SSN;
	RUN;



*	DATA SET:  Demog   *;

*	Creating data for Iowa   *;
DATA	WORK.Demog_IA;
	KEEP	SSN
			GenderCd
			EthCd RaceCd
			BirthDt	;

	SET	HypImpt.IowaResidents	(	KEEP	= SSN Sex Ethnicity Race BirthDt	);

	IF	MISSING(Sex) = 1		THEN	GenderCd	= .;
		ELSE IF	Sex	= 'MALE'	THEN	GenderCd	= 1;
		ELSE IF	Sex	= 'FEMALE'	THEN	GenderCd	= 2;

	LENGTH	EthCd
			RaceCd		$ 1;
	EthCd	= SUBSTR(LEFT(Ethnicity), 1, 1);
	RaceCd	= SUBSTR(LEFT(Race), 1, 1);

	RUN;

*	Creating data for Mississippi   *;
DATA	WORK.Demog_MS;
	KEEP	SSN
			GenderCd
			EthCd RaceCd
			BirthDt	;

	SET	HypImpt.MS_Citizens	(	KEEP	= SocSecNum Gender Eth Racial DOB
								RENAME	= (	SocSecNum		= SSN	)
							);

	IF	MISSING(Gender)	= 1			THEN	GenderCd	= .;
		ELSE IF	Gender	= 'Male'	THEN	GenderCd	= 1;
		ELSE IF	Gender	= 'Female'	THEN	GenderCd	= 2;

	LENGTH	EthCd
			RaceCd		$ 1;
	EthCd	= SUBSTR(LEFT(Eth), 1, 1);

	IF	MISSING(Racial)	= 1						THEN	RaceCd	= ' ';
		ELSE IF	Racial	= 'Caucasian'			THEN	RaceCd	= 'W';
		ELSE IF	Racial	= 'African American'	THEN	RaceCd	= 'B';
		ELSE IF	Racial	= 'Asian'				THEN	RaceCd	= 'A';
		ELSE IF	Racial	= 'Other Race'			THEN	RaceCd	= 'O';
		ELSE											RaceCd	= ' ';

	BirthDt	= INPUT(DOB, DATE9.);

	RUN;

*	Creating data for Utah   *;
DATA	WORK.Demog_UT;
	KEEP	SSN
			GenderCd
			EthCd RaceCd
			BirthDt	;

	SET	HypImpt.UT_Records	(	KEEP	=	ID GenderCode EthnicityCode RaceCode
											BirthYear BirthMonth BirthDay
								RENAME	= (	EthnicityCode	= EthCd
											RaceCode		= RaceCd	)
							);

	LENGTH	SSN		$ 11;

	CharID	= PUT(ID, Z9.);
	SSN	=	CATX('-', SUBSTR(CharID, 1, 3), SUBSTR(CharID, 4, 2), SUBSTR(CharID, 6, 4));

	GenderCd	=	1*(GenderCode = 'M')	+
					2*(GenderCode = 'F')	;

	BirthDt	=	MDY(BirthMonth, BirthDay, BirthYear);

	RUN;

*	Creating Combined Data Set   *;
DATA	WORK.Demog	(	LABEL = 'Demographics'	);

	ATTRIB	SSN			LABEL = 'Social Security Number'
			GenderCd	LABEL = 'Gender Code'							FORMAT = GenderCd.
			EthCd		LABEL = 'Ethnicity Code'		LENGTH = $ 1	FORMAT = $EthCd.
			RaceCd		LABEL = 'Race Code'				LENGTH = $ 1	FORMAT = $RaceCd.
			EthRaceCd	LABEL = 'Ethnicity/Race Code'	LENGTH = $ 3	FORMAT = $EthRaceCd.
			BirthDt		LABEL = 'Birth Date'							FORMAT = MMDDYY10.	;

	SET	WORK.Demog_IA
		WORK.Demog_MS
		WORK.Demog_UT;

	IF	EthCd	= ' '	AND	RaceCd	= ' '	THEN	EthRaceCd	= ' ';
		ELSE IF	EthCd	= 'H'		THEN	EthRaceCd	= 'HIS';
		ELSE IF	RaceCd	= 'W'		THEN	EthRaceCd	= 'NHW';
		ELSE IF	RaceCd	= 'B'		THEN	EthRaceCd	= 'NHB';
		ELSE IF	RaceCd	= 'A'		THEN	EthRaceCd	= 'NHA';
		ELSE IF	RaceCd	= 'O'		THEN	EthRaceCd	= 'NHO';
		ELSE								EthRaceCd	= ' ';

	RUN;

PROC SORT
		DATA	= WORK.Demog
		OUT		= HypTabs.Demog;
	BY	SSN;
	RUN;



*	DATA SET:  Vitals   *;

*	Creating data for Iowa   *;
DATA	WORK.Vitals_IA;

	LENGTH	SSN $ 11;
	KEEP	SSN VisitDt
			HtIn WtLb SBP DBP;

	SET	HypImpt.Vit_IA (RENAME = (SSN = SSN_Long));

	SSN = SSN_Long;

	HtIn	=	HtCm * 0.394;
	WtLb	=	WtKg * 2.205;

	RUN;

*	Creating data for Mississippi   *;
DATA	WORK.Vitals_MS;

	SET	HypImpt.Mississippi_VS	(	RENAME = (	VisitDate	= VisitDt
												Height		= HtIn
												Weight		= WtLb		)
								);

	RUN;

*	Creating data for Utah   *;
DATA	WORK.Vitals_UT;
	DROP	SSN;
	SET	HypImpt.Utah_Vitals_2010 - HypImpt.Utah_Vitals_2014;

	LENGTH	SSN2	$ 11;
	SSN2	=	CATX('-', SUBSTR(SSN, 1, 3), SUBSTR(SSN, 4, 2), SUBSTR(SSN, 6, 4));

	RENAME	ApptDate	= VisitDt;
	
	RUN;

PROC SORT	DATA = WORK.Vitals_UT;
	BY	SSN2 VisitDt Measure;
	RUN;

DATA	WORK.Vitals_UT2;
	KEEP	SSN	VisitDt
			HtIn WtLb SBP DBP;
	SET	WORK.Vitals_UT	(	RENAME	= (	SSN2	=	SSN	)	);
	BY	SSN VisitDt;

	ARRAY	Tests {4}	DBP HtIn SBP WtLb (. . . .);

	IF	FIRST.VisitDt = 1	THEN	CALL MISSING(OF Tests{*});

	Index	=	1*(Measure	= 'Diastolic BP')	+
				2*(Measure	= 'Height (In)')	+
				3*(Measure	= 'Systolic BP')	+
				4*(Measure	= 'Weight (Lb)')	;

	Tests{Index} = Value;

	IF	LAST.VisitDt = 1;

	RUN;

*	Creating Combined Data Set   *;
DATA	WORK.Vitals	(	LABEL = 'Vital Signs'	);
	RETAIN	SSN VisitDt
			HtIn WtLb SBP DBP;
	SET	WORK.Vitals_IA
		WORK.Vitals_MS
		WORK.Vitals_UT2;

	LABEL	SSN		= 'Social Security Number'
			VisitDt	= 'Visit Date'
			HtIn	= 'Height (In)'
			WtLb	= 'Weight (Lb)'
			SBP		= 'Systolic BP (mmHg)'
			DBP		= 'Diastolic BP (mmHg)';

	FORMAT	VisitDt DATE9.
			HtIn	2.
			WtLb	3.	;

	RUN;

PROC SORT
		DATA	= WORK.Vitals
		OUT		= HypTabs.Vitals;
	BY	SSN VisitDt;
	RUN;



*	DATA SET:  NDI   *;
DATA HypTabs.NDI	(LABEL = 'Death Data');

	ATTRIB	SSN				LABEL = 'Social Security Number'
			DeathDt			LABEL = 'Death Date'					FORMAT = YYMMDDD10.
			ICD10			LABEL = 'ICD 10 Code'
			CODCd			LABEL = 'Cause of Death Code'			FORMAT = CODCd.
			HypRelDeathInd	LABEL = 'Hypertension-Related Death'	FORMAT = IndVbl.	;

	SET	HypImpt.NDI;

	IF			MISSING(ICD10) = 1			THEN	CODCd	= .;
		ELSE IF	SUBSTR(ICD10, 1, 3) = 'I25'	THEN	CODCd	= 1;
		ELSE IF	SUBSTR(ICD10, 1, 3) = 'I50'	THEN	CODCd	= 2;
		ELSE IF	SUBSTR(ICD10, 1, 3) = 'I63'	THEN	CODCd	= 3;
		ELSE										CODCd	= 4;

	IF	MISSING(CODCd) = 1	THEN	HypRelDeathInd = .;
		ELSE	HypRelDeathInd	= (CODCd IN(1, 2, 3));

	RUN;

PROC SORT DATA = HypTabs.NDI;
	BY	SSN;
	RUN;




*	Code used to create the formats (this should've been done in assignment 3.2)   *;
PROC FORMAT
	LIBRARY	= HypTabs.HypFormats;

	VALUE	CODCd
				.			= 'Unknown'
				1			= 'Heart Disease'
				2			= 'Heart Failure'
				3			= 'Stroke'
				4			= 'Other COD'
				OTHER		= 'Unanticipated Value';

	VALUE	DBPHypCats
				.			= 'Unknown'
				LOW - < 0	= 'Check:  Below 0'
				0 - < 60	= 'Below Normal'
				60 - < 80	= 'Normal'
				80 - < 90	= 'High Normal'
				90 - < 100	= 'Stage 1 Hypertension'
				100 - < 110	= 'Stage 2 Hypertension'
				110 - HIGH	= 'Stage 3 Hypertension';

	VALUE	DBPHypYN
				.			= 'Unknown'
				LOW - < 0	= 'Check:  Below 0'
				0 - < 90	= 'No Hypertension'
				90 - HIGH	= 'Hypertension';

	VALUE	GenderCd
				.		= 'Unknown'
				1		= 'Male'
				2		= 'Female'
				OTHER	= 'Unexpected Value';

	VALUE	IndVbl
				.		= 'Unknown'
				0		= 'No'
				1		= 'Yes'
				OTHER	= 'Unexpected Value';

	VALUE	SBPHypCats
				.			= 'Unknown'
				LOW - < 0	= 'Check:  Below 0'
				0 - < 90	= 'Below Normal'
				90 - < 120	= 'Normal'
				120 - < 140	= 'High Normal'
				140 - < 160	= 'Stage 1 Hypertension'
				160 - < 180	= 'Stage 2 Hypertension'
				180 - HIGH	= 'Stage 3 Hypertension';

	VALUE	SBPHypYN
				.			= 'Unknown'
				LOW - < 0	= 'Check:  Below 0'
				0 - < 140	= 'No Hypertension'
				140 - HIGH	= 'Hypertension';

	VALUE	$EthCd
				' '			= 'Unknown'
				'H'			= 'Hispanic'
				'N'			= 'Non-Hispanic'
				OTHER		= 'Unexpected Value';

	VALUE	$EthRaceCd
				' '			= 'Unknown'
				'HIS'		= 'Hispanic'
				'NHA'		= 'NH Asian'
				'NHB'		= 'NH Black'
				'NHO'		= 'NH Other Race'
				'NHW'		= 'NH White'
				OTHER		= 'Unexpected Value';

	VALUE	$RaceCd
				' '			= 'Unknown'
				'A'			= 'Asian'
				'B'			= 'Black'
				'O'			= 'Other Race'
				'W'			= 'White'
				OTHER		= 'Unexpected Value';

	VALUE	$StateCd
				' '			= 'Unknown'
				'IA'		= 'Iowa'
				'MS'		= 'Mississippi'
				'UT'		= 'Utah'
				OTHER		= 'Unexpected Value';

	RUN;





;	*';	*";	*/;	QUIT;	RUN;
*	End of Program   *; RUN;

